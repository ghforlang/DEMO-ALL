# 指定metaspace初始化大小，默认21.8M，值越大触发Metaspace GC的时机就越远
-XX:MetaspaceSize=N  
# 指定Metaspace上限，防止metasace无限增长，影响其他程序
-XX:MaxMetaspaceSize=N  
# 用于衡量metaspace GC过后的最小空闲比，默认40 ，小于N，则提升Metaspace大小
-XX:MinMetaspaceFreeRatio=N 
# 用于衡量metaspace GC过后的最大空闲比，默认值70，大于N，则减少metaspace的大小
-XX:MaxMetaspaceFreeRatio=N 
# metasapce扩展时的最大幅度 默认, 5.2M
-XX:MaxMetaspaceExpansion=N 
# metaspace扩展时的最小幅度，默认332.8K
-XX:MinMetaspaceExpansion=N 

#是否开启对象指针压缩
-XX:+/-UseCompressedOops
#是否开启类指针压缩
-XX:+/-UseCompressedClassPointers
#Klass Metaspace内存大小控制,默认大小为1G,只有当开起了类指针压缩才有效
-XX:CompressedClassSpaceSize

# 控制GC前后生成dump
-XX:+HeapDumpBeforeFullGC
-XX:+HeapDumpAfterFullGC

# 控制软引用回收时机,默认值1000,即1s，代表每1M >空闲空间大小SoftReference保留1s
-XX:SoftRefLRUPolicyMSPerMB 

#  跟踪类加载、卸载的情况
-XX:TraceClassLoading -XX:TraceClassUnloading 

# 可以用于跟踪JVM原生内存的使用
-XX:NativeMemoryTracking=summary 
-XX:NativeMemoryTracking=detail

#查看GC情况
-verbose:gc
#查看加载的类情况，或者 -verbose
-verbose:class
#查看native方法调用情况
-verbose:jni

#打印GC日志、时间戳
-XX:+PrintGCDetails -XX:+PrintGCDateStamps

#禁用System.gc()
-XX:+DisableExplicitGC
#CMS模式下，可以做一次稍微高效的fullGC
-XX:+ExplicitGCInvokesConcurrent

#指定允许使用的最大堆外内存大小
-XX:MaxDirectMemorySize

#IDEA jvm 参数配置推荐 参考博文:https://www.jianshu.com/p/ba2d613df94f
-Xms1024m
-Xmx1024m
-Xmn372m
-XX:MetaspaceSize=256m
-XX:MaxMetaspaceSize=512m
-XX:ReservedCodeCacheSize=240m
-XX:+UseConcMarkSweepGC
-XX:+UseParNewGC
-XX:+CMSParallelRemarkEnabled
-XX:+CMSScavengeBeforeRemark
-XX:CMSInitiatingOccupancyFraction=75
-XX:+UseCMSInitiatingOccupancyOnly
-XX:+UseCMSCompactAtFullCollection
-XX:CMSFullGCsBeforeCompaction=3
-XX:SoftRefLRUPolicyMSPerMB=50

#reference 详解 https://www.jianshu.com/p/95a4931ebf01

-XX:ErrorFile=/var/log/hs_err_pid<pid>.log